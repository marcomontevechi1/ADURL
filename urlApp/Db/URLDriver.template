# Database for the records specific to the URL driver
# Mark Rivers
# October 12, 2010

include "ADBase.template"

# URL records.  These are not PINI=YES because the URLSelect record is.
record(waveform, "$(P)$(R)URL1")
{
    field(DTYP, "asynOctetWrite")
    field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))URL_NAME")
    field(FTVL, "CHAR")
    field(NELM, "256")
    info(autosaveFields, "VAL")
}

record(waveform, "$(P)$(R)URL2")
{
    field(DTYP, "asynOctetWrite")
    field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))URL_NAME")
    field(FTVL, "CHAR")
    field(NELM, "256")
    info(autosaveFields, "VAL")
}

record(waveform, "$(P)$(R)URL3")
{
    field(DTYP, "asynOctetWrite")
    field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))URL_NAME")
    field(FTVL, "CHAR")
    field(NELM, "256")
    info(autosaveFields, "VAL")
}

record(waveform, "$(P)$(R)URL4")
{
    field(DTYP, "asynOctetWrite")
    field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))URL_NAME")
    field(FTVL, "CHAR")
    field(NELM, "256")
    info(autosaveFields, "VAL")
}

record(waveform, "$(P)$(R)URL5")
{
    field(DTYP, "asynOctetWrite")
    field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))URL_NAME")
    field(FTVL, "CHAR")
    field(NELM, "256")
    info(autosaveFields, "VAL")
}

record(waveform, "$(P)$(R)URL6")
{
    field(DTYP, "asynOctetWrite")
    field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))URL_NAME")
    field(FTVL, "CHAR")
    field(NELM, "256")
    info(autosaveFields, "VAL")
}

record(waveform, "$(P)$(R)URL7")
{
    field(DTYP, "asynOctetWrite")
    field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))URL_NAME")
    field(FTVL, "CHAR")
    field(NELM, "256")
    info(autosaveFields, "VAL")
}

record(waveform, "$(P)$(R)URL8")
{
    field(DTYP, "asynOctetWrite")
    field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))URL_NAME")
    field(FTVL, "CHAR")
    field(NELM, "256")
    info(autosaveFields, "VAL")
}

record(waveform, "$(P)$(R)URL9")
{
    field(DTYP, "asynOctetWrite")
    field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))URL_NAME")
    field(FTVL, "CHAR")
    field(NELM, "256")
    info(autosaveFields, "VAL")
}

record(waveform, "$(P)$(R)URL10")
{
    field(DTYP, "asynOctetWrite")
    field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))URL_NAME")
    field(FTVL, "CHAR")
    field(NELM, "256")
    info(autosaveFields, "VAL")
}

record(waveform, "$(P)$(R)URL_RBV")
{
    field(DTYP, "asynOctetRead")
    field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))URL_NAME")
    field(FTVL, "CHAR")
    field(NELM, "256")
    field(SCAN, "I/O Intr")
}

# mbbo record to select 1 of the 8 URLs.
# The strings can be changed at run-time and are in save/restore
record (mbbo, "$(P)$(R)URLSelect")
{
    field(PINI, "YES")
    field(ZRST, "URL1")
    field(ZRVL, "1")
    field(ONST, "URL2")
    field(ONVL, "2")
    field(TWST, "URL3")
    field(TWVL, "3")
    field(THST, "URL4")
    field(THVL, "4")
    field(FRST, "URL5")
    field(FRVL, "5")
    field(FVST, "URL6")
    field(FVVL, "6")
    field(SXST, "URL7")
    field(SXVL, "7")
    field(SVST, "URL8")
    field(SVVL, "8")
    field(EIST, "URL9")
    field(SVVL, "8")
    field(NIST, "URL10")
    field(NIVL, "8")
    field(FLNK, "$(P)$(R)URLSeq.PROC PP MS")
    info(autosaveFields, "VAL ZRST ONST TWST THST FRST FVST SXST SVST EIST NIST")
}

record(seq, "$(P)$(R)URLSeq")
{
    field(SELL, "$(P)$(R)URLSelect.RVAL NPP")
    field(SELM, "Specified")
    field(DOL1, "1")
    field(LNK1, "$(P)$(R)URL1.PROC PP MS")
    field(DOL2, "1")
    field(LNK2, "$(P)$(R)URL2.PROC PP MS")
    field(DOL3, "1")
    field(LNK3, "$(P)$(R)URL3.PROC PP MS")
    field(DOL4, "1")
    field(LNK4, "$(P)$(R)URL4.PROC PP MS")
    field(DOL5, "1")
    field(LNK5, "$(P)$(R)URL5.PROC PP MS")
    field(DOL6, "1")
    field(LNK6, "$(P)$(R)URL6.PROC PP MS")
    field(DOL7, "1")
    field(LNK7, "$(P)$(R)URL7.PROC PP MS")
    field(DOL8, "1")
    field(LNK8, "$(P)$(R)URL8.PROC PP MS")
    field(DOL9, "1")
    field(LNK9, "$(P)$(R)URL9.PROC PP MS")
    field(DOLA, "1")
    field(LNKA, "$(P)$(R)URL10.PROC PP MS")
}

record (bo, "$(P)$(R)UseCurl")
{
    field(DESC, "Toggle curl usage")
    field(DTYP, "asynInt32")
    field(PINI, "YES")
    field(ZNAM, "NO")
    field(ONAM, "YES")
    field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))USE_CURL")
    info(autosaveFields, "VAL ZRST ONST TWST THST")
}

record (mbbo, "$(P)$(R)CurlOptHTTPAuth")
{
    field(DESC, "Set CURLOPT_HTTPAUTH")
    field(DTYP, "asynInt32")
    field(ZRST, "CURLAUTH_BASIC")
    field(ZRVL, "0")
    field(ONST, "CURLAUTH_DIGEST")
    field(ONVL, "1")
    field(TWST, "CURLAUTH_DIGEST_IE")
    field(TWVL, "2")
    field(THST, "CURLAUTH_BEARER")
    field(THVL, "3")
    field(FRST, "CURLAUTH_NEGOTIATE")
    field(FRVL, "4")
    field(FVST, "CURLAUTH_NTLM")
    field(FVVL, "5")
    field(SXST, "CURLAUTH_NTLM_WB")
    field(SXVL, "6")
    field(SVST, "CURLAUTH_ANY")
    field(SVVL, "7")
    field(EIST, "CURLAUTH_ANYSAFE")
    field(EIVL, "8")
    field(NIST, "CURLAUTH_ONLY")
    field(NIVL, "9")
    field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))ASYN_CURLOPT_HTTPAUTH")
}

record (mbbo, "$(P)$(R)CurlOptSSLHost")
{
    field(DESC, "Verify Host SSL certificate")
    field(DTYP, "asynInt32")
    field(ZRST, "NO")
    field(ZRVL, "0")
    field(TWST, "YES")
    field(TWVL, "2")
    field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))ASYN_CURLOPT_SSL_VERIFYHOST")
}

record (bo, "$(P)$(R)CurlOptSSLPeer")
{
    field(DESC, "Verify SSL peer")
    field(DTYP, "asynInt32")
    field(PINI, "YES")
    field(ZNAM, "NO")
    field(ONAM, "YES")
    field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))ASYN_CURLOPT_SSL_VERIFYPEER")
}

record(waveform, "$(P)$(R)CurlUsername")
{
    field(DESC, "Username for curl auth")
    field(DTYP, "asynOctetWrite")
    field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))ASYN_CURLOPT_USERNAME")
    field(FTVL, "CHAR")
    field(NELM, "128")
}